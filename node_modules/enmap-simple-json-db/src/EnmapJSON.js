var j = require('simple-json-db');

class provider {
  constructor (o) {
    this.defer = new Promise((resolve) => {
      this.ready = resolve;
    });
    if (!o.path) throw new Error('The path to the JSON file is not specified.');
    this.path = o.path;
    this.init();
  }
  async init (enmap) {
    this.enmap = enmap;
    this.db = new j(this.path);
    this.ready();
  }
  set (key, value) {
    if (!key || !['String', 'Number'].includes(key.constructor.name)) {
      throw new Error('Keys should be strings or numbers.');
    }
    this.db.set(key, value);
  }
  delete (key) {
    if (!this.db.has(key)) throw new Error("Key don't exists");
    this.db.delete(key);
  }
  has (key) {
    if (this.db.has(key)) {
      return true;
    } else {
      return false;
    }
  }
  get (key) {
    if (!this.db.has(key)) throw new Error('Key don\'t exist');
    return this.db.get(key);
  }
  getVersion() {
    return require('./package.json').version;
  }
}

module.exports = provider;